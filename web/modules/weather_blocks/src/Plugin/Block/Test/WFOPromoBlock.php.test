<?php

namespace Drupal\weather_blocks\Plugin\Block\Test;

use Drupal\Core\Entity\ContentEntityInterface;
use Drupal\weather_blocks\Plugin\Block\WFOPromoBlock;

/**
 * Tests for the WeatherStory block.
 */
final class WFOPromoBlockTest extends Base
{
    protected $bodyField;
    protected $titleField;
    protected $phoneField;
    protected $facebookField;
    protected $twitterField;
    protected $youtubeField;

    protected function setUp($type = null, $override = true): void
    {
        parent::setUp(WFOPromoBlock::class);
    }

    /**
     * Test that the block returns a node iD.
     * @group unit
     * @group block
     * @group wfo-promo-block
     */
    public function testReturnsAWFOPromo(): void
    {
        $this->onLocationRoute();

        // Setup fetching the actual node.
        $story = $this->createStub(ContentEntityInterface::class);

        $story->method("id")->willReturn(94);

        $this->entityService
            ->method("getLatestNodeFromWFO")
            ->willReturn($story);

        $expected = ["node" => 94];

        $actual = $this->block->build();

        $this->assertEquals($expected, $actual);
    }

    /**
     * Test that the block returns null if we're not on a grid route.
     * @group unit
     * @group block
     * @group wfo-promo-block
     */
    public function testBuildNotGridRoute(): void
    {
        $this->notOnLocationRoute();

        $actual = $this->block->build();

        $this->assertEquals([], $actual);
    }

    /**
     * Override the base test to disable it.
     * @group unit
     * @group block
     * @group wfo-promo-block
     */
    public function testHandlesExceptions(): void
    {
        $this->assertEquals(true, true);
    }
}
