<?php

namespace Drupal\weather_data\Service\Test;

final class FormatDailyPeriodTest extends Base
{
    protected function setUp(): void
    {
        parent::setUp();
    }

    /**
     * Ensure that if null is passed in we early return it
     */
    public function testReturnsNull(): void
    {
        $actual = $this->weatherDataService->formatDailyPeriod(null);

        $this->assertNull($actual);
    }

    /**
     * Ensure we are returning expected formatted data for good case
     */
    public function testReturnsFormatted(): void
    {
        $periods = json_decode(
            file_get_contents(
                __DIR__ . "/test_data/daily.forecast.today.two.good.json",
            ),
        );

        // We take the first daytime future period
        $period = $periods[2];

        $actual = $this->weatherDataService->formatDailyPeriod($period);

        $expected = [
            "shortDayName" => "Tue",
            "dayName" => "Tuesday",
            "monthAndDay" => "Nov 28",
            "startTime" => "2023-11-28T06:00:00-07:00",
            "shortForecast" => "Sunny",
            "icon" => (object) [
                "icon" => "mostly_clear-day.svg",
                "base" => "mostly_clear-day",
            ],
            "temperature" => 53,
            "probabilityOfPrecipitation" => null,
            "isDaytime" => true,
        ];

        $this->assertEquals($expected, $actual);
    }
}
