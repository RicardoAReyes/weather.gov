<?php

namespace Drupal\weather_data\Service\Test;

final class GetHourlyPrecipitationTest extends Base
{
    /**
     * The static time used for testing
     *
     * @var now
     */
    protected $now;

    /**
     * Basic test case setup
     */
    protected function setUp(): void
    {
        parent::setUp();

        // Following the other testing conventions,
        // we use an established timestamp for 'now'.
        date_default_timezone_set("America/New_York");
        $this->now = \DateTimeImmutable::createFromFormat(
            \DateTimeInterface::ISO8601_EXPANDED,
            "2023-11-27T12:00:00-7:00",
        );
    }

    public function testHappyPaht(): void
    {
        $this->selfMock
            ->method("getPlaceFromGrid")
            ->will(
                $this->returnValueMap([
                    [
                        "THE WFO",
                        17,
                        94,
                        false,
                        (object) ["timezone" => "America/Phoenix"],
                    ],
                ]),
            );

        $this->selfMock->method("getFromWeatherAPI")->will(
            $this->returnValueMap([
                [
                    "/gridpoints/THE WFO/17,94",
                    1,
                    75,
                    (object) [
                        "properties" => (object) [
                            "quantitativePrecipitation" => (object) [
                                "values" => [
                                    (object) [
                                        "validTime" =>
                                            "2023-11-27T12:00:00+00:00/PT6H",
                                        "value" => 19.3,
                                    ],
                                    (object) [
                                        "validTime" =>
                                            "2023-11-27T18:00:00+00:00/PT6H",
                                        "value" => 37.12351,
                                    ],
                                    (object) [
                                        "validTime" =>
                                            "2023-11-28T00:00:00+00:00/PT3H",
                                        "value" => 932,
                                    ],
                                    (object) [
                                        "validTime" =>
                                            "2023-11-28T03:00:00+00:00/PT4H",
                                        "value" => 0,
                                    ],
                                    (object) [
                                        "validTime" =>
                                            "2023-11-28T07:00:00+00:00/PT6H",
                                        "value" => 19.3,
                                    ],
                                    (object) [
                                        "validTime" =>
                                            "2023-11-28T13:00:00+00:00/PT6H",
                                        "value" => 0.325,
                                    ],
                                ],
                            ],
                        ],
                    ],
                ],
            ]),
        );

        $expected = [
            (object) ["start" => "11 AM", "end" => "5 PM", "value" => 1.46],
            (object) ["start" => "5 PM", "end" => "8 PM", "value" => 36.69],
            (object) ["start" => "8 PM", "end" => "12 AM", "value" => 0],
            (object) ["start" => "12 AM", "end" => "6 AM", "value" => 0.76],
            (object) ["start" => "6 AM", "end" => "12 PM", "value" => 0.01],
        ];

        $actual = $this->weatherDataService->getHourlyPrecipitation(
            "The Wfo",
            17,
            94,
            $this->now,
            $this->selfMock,
        );

        $this->assertEquals($expected, $actual);
    }
}
