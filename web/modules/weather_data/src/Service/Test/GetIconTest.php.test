<?php

namespace Drupal\weather_data\Service\Test;

/**
 * Tests parsing of legacyMapping keys from icon URLs.
 */
final class GetIcon extends Base
{
    /**
     * Tests that we can map a two part icon url to a legacy key.
     */
    public function testTwoPaths(): void
    {
        $path = "https://api.weather.gov/icons/land/day/snow,20?size=medium";
        $observation = (object) ["icon" => $path];
        $actual = $this->weatherDataService->getIcon($observation);
        $expected = (object) ["icon" => "snow.svg", "base" => "snow"];

        $this->assertEquals($expected, $actual);
    }

    /**
     * Tests that we can map a three part icon url to legacy key.
     *
     * We expect to use just the first condition part.
     */
    public function testThreePaths(): void
    {
        $path =
            "https://api.weather.gov/icons/land/day/snow/rain,20?size=medium";
        $observation = (object) ["icon" => $path];
        $actual = $this->weatherDataService->getIcon($observation);
        $expected = (object) ["icon" => "snow.svg", "base" => "snow"];

        $this->assertEquals($expected, $actual);
    }

    /**
     * Tests that we return null for an empty icon value.
     */
    public function testUnknownPath(): void
    {
        $observation = (object) ["icon" => ""];
        $actual = $this->weatherDataService->getIcon($observation);
        $expected = (object) ["icon" => null, "base" => null];

        $this->assertEquals($expected, $actual);
    }
}
