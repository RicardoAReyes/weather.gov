<?php

namespace Drupal\weather_data\Service\Test;

use Drupal\weather_data\Service\UnitConversion;
use PHPUnit\Framework\TestCase;

final class SpeedUnitConversionTest extends TestCase
{
    /**
     * @group unit
     * @group units-utility
     */
    public function testNullSpeed(): void
    {
        $expected = null;
        $actual = UnitConversion::getSpeedScalar((object) ["value" => null]);

        $this->assertEquals($expected, $actual);
    }

    /**
     * @group unit
     * @group units-utility
     */
    public function testKmphToMph(): void
    {
        $expected = 23;
        $actual = UnitConversion::getSpeedScalar(
            (object) ["value" => 37.362, "unitCode" => "wmoUnit:km_h-1"],
        );

        $this->assertEquals($expected, $actual);
    }

    /**
     * @group unit
     * @group units-utility
     */
    public function testKmphToKmph(): void
    {
        $expected = 37;
        $actual = UnitConversion::getSpeedScalar(
            (object) ["value" => 37.362, "unitCode" => "wmoUnit:km_h-1"],
            false,
        );

        $this->assertEquals($expected, $actual);
    }

    /**
     * @group unit
     * @group units-utility
     */
    public function testMphToKmph(): void
    {
        $expected = 38;
        $actual = UnitConversion::getSpeedScalar(
            (object) ["value" => 23.37, "unitCode" => "wmoUnit:m_h"],
            false,
        );

        $this->assertEquals($expected, $actual);
    }

    /**
     * @group unit
     * @group units-utility
     */
    public function testMphToMph(): void
    {
        $expected = 23;
        $actual = UnitConversion::getSpeedScalar(
            (object) ["value" => 23.37, "unitCode" => "wmoUnit:m_h"],
        );

        $this->assertEquals($expected, $actual);
    }
}
